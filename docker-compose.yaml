version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: nplmw-frontend
    restart: always
    ports:
      - 3000:80
    depends_on:
      - backend
    networks:
      nplmw_network:
        ipv4_address: 192.168.100.2

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: nplmw-backend
    command: bash -c "python create_tables.py && python main.py"
    environment:
      - PROJECT_NAME=${PROJECT_NAME}
      - PROJECT_DESCRIPTION=${PROJECT_DESCRIPTION}
      - PROJECT_VERSION=${PROJECT_VERSION}
      - API_V1_STR=${API_V1_STR}
      - DB_URL=${DB_URL}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_EXPIRE_MINUTES=${JWT_EXPIRE_MINUTES}
      - TIMEZONE=${TIMEZONE}
    restart: always
    depends_on:
      - postgres
    ports:
      - 4000:4000
    networks:
      nplmw_network:
        ipv4_address: 192.168.100.3
      
  
  postgres:
    image: postgres:15
    container_name: nplmw-database
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    networks:
      nplmw_network:
        ipv4_address: 192.168.100.4
    
  pgadmin:
    image: dpage/pgadmin4
    container_name: nplmw-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION=${PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - 5050:80
    depends_on:
      - postgres
    networks:
      nplmw_network:
        ipv4_address: 192.168.100.5

volumes:
  postgres_data:
  pgadmin_data:

networks:
  nplmw_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/29